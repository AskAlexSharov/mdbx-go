name: Test
on: [ push ]
jobs:

  test:
    strategy:
      matrix:
        os: [ windows-latest ] # list of os: https://github.com/actions/virtual-environments
        go: [ '1.16' ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: checkout submodule
        run: |
          git submodule init
          git submodule update
          cd libmdbx && git checkout devel
          choco upgrade mingw -y --no-progress

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      #      - name: Add msbuild to PATH
      #        uses: microsoft/setup-msbuild@v1.0.2

      #      - name: mvsc
      #        shell: cmd
      #        run: |
      #          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      #          set PATH="C:\P\grep;%PATH%"
      #          set CC=cl.exe
      #          set CXX=cl.exe

      - name: build mdbx
        run: |
          cmake --version
          cd libmdbx
          mkdir build
          cd build
          cmake -DBUILD_SHARED:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -DMDBX_WITHOUT_MSVC_CRT:BOOL=ON ..
          cmake --build . --target mdbx-static
          ls Debug
          cp Debug/mdbx-static.lib .
          ls
          cd ../..
          echo $LDFLAGS
          cp ./mdbx/dist/mdbx.h ./mdbx
          go env
          go test ./mdbx


      #  -DMDBX_WITHOUT_MSVC_CRT:BOOL=ON
      #          docker run --rm dockcross/windows-static-x64-posix > ./dockcross
      #          chmod +x ./dockcross
      #          ./dockcross cmake -B./build -H./libmdbx
      #          ./dockcross cmake --build ./build --target mdbx-static
      #
      #          cp libmdbx/mdbx.h mdbx/
      #          cmake -DBUILD_SHARED:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -DMDBX_WITHOUT_MSVC_CRT:BOOL=ON .


#https://github.com/golang/go/issues/20982
