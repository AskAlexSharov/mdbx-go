name: Test
on: [ push ]
jobs:

  test:
    strategy:
      matrix:
        os: [ windows-latest ] # list of os: https://github.com/actions/virtual-environments
        go: [ '1.16' ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: checkout submodule
        run: |
          git submodule init
          git submodule update
          cd libmdbx && git checkout devel

      #      - name: Add msbuild to PATH
      #        uses: microsoft/setup-msbuild@v1.0.2

      - name: build mdbx
        run: |
          cmake --version
          cd libmdbx
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" ..
          cmake --build . --target mdbx-static
          ls
          cp ./libmdbx-static.a ./../../mdbx/libmdbx.a
          cp ./libmdbx-static.a  ./libmdbx.a
          cp ./libmdbx-static.a ./../../mdbx/libmdbx-static.a
          ar -xv ./libmdbx-static.a
          ls
          echo "alex"
          pwd
          cd ../..
          pwd
          echo $PATH
          ls C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0
          ls C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc
          ls C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib
          cp libmdbx/build/alloy.c.obj mdbx/
          cp libmdbx/build/alloy.c.obj mdbx/libmdbx.obj
          cp libmdbx/build/alloy.c.obj mdbx/libmdbx.o
          cp libmdbx/build/alloy.c.obj mdbx/libmdbx
          cp libmdbx/build/alloy.c.obj .
          cp libmdbx/build/alloy.c.obj C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/libmdbx.obj
          cp libmdbx/build/alloy.c.obj C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/libmdbx.o
          cp libmdbx/build/alloy.c.obj C:/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin/../lib/gcc/libmdbx

          pwd
          cp C:\WINDOWS\SYSTEM32\ntdll.dll mdbx/
          cp C:\WINDOWS\SYSTEM32\ntdll.dll .
          ls mdbx/
          make win2


      #          docker run --rm dockcross/windows-static-x64-posix > ./dockcross
#          chmod +x ./dockcross
#          ./dockcross cmake -B./build -H./libmdbx
#          ./dockcross cmake --build ./build --target mdbx-static
#
      #          cp libmdbx/mdbx.h mdbx/
      #          cmake -DBUILD_SHARED:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -DMDBX_WITHOUT_MSVC_CRT:BOOL=ON .

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Test
        run: |
          ls mdbx/
          make win2

#https://github.com/golang/go/issues/20982
